
trigger:
- none

variables:
  - group: MyVarGroup
  - name: rgname
    value: rg-for-tests
  - name: location
    value: westeurope
  - name: clustername
    value: myaks1
  - name: nodecount
    value: 2
  - name: vnetname
    value: myvnet1
  - name: subnetname
    value: mysubnet1
  - name: spnname
    value: myaks1-sp

pool:
  vmImage: ubuntu-latest

steps:
  - task: AzureCLI@2
    displayName: initialisation
    inputs:
      azureSubscription: $(azureSubscriptionConnection)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az extension add --name aks-preview
        az feature register --name VMSSPreview --namespace Microsoft.ContainerService
        az provider register --namespace Microsoft.ContainerService
        az provider register --namespace Microsoft.OperationsManagement
        az provider register --namespace Microsoft.OperationalInsights
    condition: false

  - task: AzureCLI@2
    displayName: rg_creation
    inputs:
      azureSubscription: $(azureSubscriptionConnection)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az group create --name $(rgname) --location $(location) --output table
    condition: succeeded()

  - task: AzureCLI@2
    displayName: network_creation
    inputs:
      azureSubscription: $(azureSubscriptionConnection)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az network vnet create `
        --resource-group $(rgname) `
        --name $(vnetname) `
        --address-prefixes 10.0.0.0/8 `
        --subnet-name $(subnetname) `
        --subnet-prefix 10.240.0.0/16
    condition: succeeded()

  - task: AzureCLI@2
    displayName: aks_creation
    inputs:
      azureSubscription: $(azureSubscriptionConnection)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        export VNET_ID = $(az network vnet show `
          --resource-group $(rgname) `
          --name $(vnetname) `
          --query id `
          --output tsv)
        export SUBNET_ID=$(az network vnet subnet show `
          --resource-group $(rgname) `
          --vnet-name $(vnetname) `
          --name $(subnetname) `
          --query id `
          --output tsv)
        export SP_PASSWD=$(az ad sp create-for-rbac `
          --name $(spnname) `
          --role Contributor `
          --scope $VNET_ID `
          --query password `
          --output tsv)
        export SP_ID=$(az ad sp show `
          --id http://$(spnname) `
          --query appId `
          --output tsv)
        echo $(VNET_ID)
        echo $(SUBNET_ID)
        echo $(SP_PASSWD)
        echo $(SP_ID)
        az aks create --name $(clustername) `
          --resource-group $(rgname) `
          --generate-ssh-keys `
          --node-count $(nodecount) `
          --node-vm-size Standard_D2s_v3 `
          --enable-vmss `
          --enable-cluster-autoscaler `
          --min-count 3 `
          --max-count 6 `
          --kubernetes-version 1.12.7 `
          --service-principal $(SP_ID) `
          --client-secret $(SP_PASSWD) `
          --dns-service-ip 10.0.0.10 `
          --docker-bridge-address 172.17.0.1/16 `
          --network-plugin azure `
          --network-policy azure `
          --service-cidr 10.0.0.0/16 `
          --vnet-subnet-id $(SUBNET_ID) `
          --output table
    condition: succeeded()
